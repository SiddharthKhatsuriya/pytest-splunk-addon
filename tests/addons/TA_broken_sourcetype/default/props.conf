# Component tested: sourcetype
# Scenario: The sourcetype doesn't exist so the field will not be extracted
# Expected result: FAIL
[notvalid]
EXTRACT-one = group=(?<extractone>[^,]+)


[splunkd]
# Component tested: EVAL
# Scenario: As EVAL-two field is depend on EVAL-one field, two field events will be never present, the test case will fail for two field.
# Expected result: FAIL
EVAL-one = "working"
EVAL-two = one

# Component tested: EVAL
# Scenario: source_field is used from EVAL and will not be available in splunk hence this extracting fields from it would fail.
# Expected result: FAIL
EVAL-used_in_extract = "use_this_in_extract"
EXTRACT-incorrect_extract = (?<incorrect_extract>.*) in used_in_extract

# Component tested: LOOKUP
# Scenario: Without lookup name 
# Expected result: FAIL
LOOKUP-test_no_lookup = component OUTPUT context_test

# Component tested: LOOKUP
# Scenario: With non-existing lookup name  
# Expected result: FAIL
LOOKUP-test_nonexistent_lookup = Lookup_NAN component OUTPUT context_test

# Component tested: LOOKUP
# Scenario: Lookup without input field so the output_fields will not be there.
# Expected result: FAIL
LOOKUP-test_no_inputfield = ta_ficition_lookup OUTPUT context_test

# Component tested: LOOKUP
# Scenario: non_existing output_field with output/outputnew so the tests for output_field will fail.
# Expected result: FAIL
LOOKUP-test_wrong_output = ta_ficition_lookup component output context_test
LOOKUP-test_wrong_outputnew = ta_ficition_lookup component outputnew context_test

# Component tested: LOOKUP
# Scenario: Empty lookup file so no tests are generated for the output_fields.
# Expected result: PASS
LOOKUP-test_empty_csv = empty_lookup component context_test

# Component tested: LOOKUP
# Scenario: Wrong lookup file and no output fields
# Expected result: PASS
LOOKUP-test_lookup_not_found = NaN_lookup component context_test


REPORT-tsc-delim-fields = tsc-delim-fields
REPORT-tsc-sk-regex-format = tsc-sk-regex-format
REPORT-tsc-sk-delim-format = contact_mode_extract
# If a non_existing stanza is present then no testcases are generated for it.
REPORT-tsc-regex-format = tsc-regex-format, non_existing_transforms_stanza


# Component tested: FIELDALIAS
# Scenario: Plugin searches for the original field and one or more alias field names.
# Expected result: PASS
FIELDALIAS-one = name AS aliasone

# Component tested: FIELDALIAS
# Scenario: Plugin searches for the original field and one or more alias field names.
# Expected result: FAIL
FIELDALIAS-two = nofield AS aliasone
FIELDALIAS-three = one AS aliasthree


# Component tested: source, sourcetypes
# Expected result: FAIL
[source::...notvalid...]
sourcetype = notvalid

# Component tested: source, sourcetype
# The settings provided by the pattern [source::...none...] take
# precedence over those provided by [source::...notvalid...], and sourcetype ends up
# with "none" as its value.
# Expected result: PASS
[source::...none...]
sourcetype = none
