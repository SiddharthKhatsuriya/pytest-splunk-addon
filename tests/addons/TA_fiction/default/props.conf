#Copyright Splunk
[source::/opt/splunk/var/log/splunk/splunkd.log*]
sourcetype = splunkd
EVAL-component = "test"
FIELDALIAS-nine =  extractone AS aliasthirteen

[source::...(/opt/splunk/var/log/splunk/)(metrics.log*|health.log*)]
sourcetype = splunkd
EVAL-splunk_server = "server1"

[splunkd]

# single field extraction (?<field>regex)
EXTRACT-one = group=(?<extractone>[^,]+)

# multiple field extractions (?<field>regex)
EXTRACT-two = group=(?<extracttwoA>[^,]+).*name=(?<extracttwoB>[^,]+)

# single field extraction (?P<field>regex)
EXTRACT-three = group=(?P<extractthree>[^,]+)

# multiple field extraction (?P<field>regex)
EXTRACT-four = group=(?P<extractfourA>[^,]+).*name=(?P<extractfourB>[^,]+)

# single field extraction (?'field'regex)
EXTRACT-five = group=(?'extractfive'[^,]+)

# multiple field extraction (?'field'regex)
EXTRACT-six = group=(?'extractsixA'[^,]+).*name=(?'extractsixB'[^,]+)

# multiple field extraction combination of regex formats
EXTRACT-seven = group=(?<extractsevenA>[^,]+).*name=(?'extractsevenB'[^,]+).*instantaneous_kbps=(?P<extractsevenC>[^,]+)

# "in" used as a regex and not as a keyword no field extract before in
EXTRACT-0 = in hotWarmPath=(?<hotwarmpath_extract>.*)

# use of "in" keyword to extract from source_field
EXTRACT-eight = (?<hotWarmPath_in>.*) in hotwarmpath_extract

#use of "IN" keyword(case insensitivity) to extract from source_field
EXTRACT-nine = (?<hotWarmPath_IN>.*) IN hotwarmpath_extract

#use of "In" keyword to extract from source_field
EXTRACT-ten = (?<hotWarmPath_In>.*) In hotwarmpath_extract

#use of "iN" keyword to extract from source_field
EXTRACT-eleven = (?<hotWarmPath_iN>.*) iN hotwarmpath_extract

# Multiple field extracted using in from source_field
EXTRACT-twelve = (?<hotWarmPath_in_opt>opt)\/splunk(?<hotWarmPath_in_other>.*) in hotwarmpath_extract

# Multiple Groups with [i]n regex as a regex and not a keyword
EXTRACT-thirteen = (?<date_value_in_hotwarmpath_event>\d+-\d+-\d+)\s(?<time_value_in_hotwarmpath_event>\d+:\d+:\d+).*[i]n hotWarmPath=(?<hotwarmpath_extract_multiple>.*)

# Two Groups with in regex as a regex and not a keyword
EXTRACT-fourteen = (?<date_only_in_hotwarmpath_event>\d+-\d+-\d+).*in hotWarmPath=(?<hotwarmpath_extract_two>.*)

REPORT-g1 = ta_fiction_onefish
REPORT-g2 = ta_fiction_twofish
REPORT-g3 = ta_fiction_redfish, ta_fiction_bluefish

REPORT-tsc-delim-fields = tsc-delim-fields
REPORT-tsc-sk-regex-format = tsc-sk-regex-format
REPORT-tsc-sk-delim-format = tsc-sk-delim-format
REPORT-tsc-regex = tsc-regex
REPORT-tsc-regex-format = tsc-regex-format

EVAL-myeval = "Working"
FIELDALIAS-one =  extractone AS aliasone
FIELDALIAS-two = extractone AS aliastwo
FIELDALIAS-three = extractone as aliasthree extractone as aliasfour
FIELDALIAS-four = extractone AS aliasfive, extractone AS aliassix
FIELDALIAS-five = extractone asnew aliasseven
FIELDALIAS-six = extractone ASNEW aliaseight
FIELDALIAS-seven = extractone asnew aliasnine extractone asnew aliasten
FIELDALIAS-eight = extractone ASNEW aliaseleven, extractone ASNEW aliastwelve

LOOKUP_test_command_spelling_output1 = ta_ficition_lookup component OUTPUT context_test1
LOOKUPtest_command_spelling_output2  = ta_ficition_lookup component OUTPUT context_test2
LOOKUP-test_command_spelling_output3 = ta_ficition_lookup component OUTPUT context_test1
lookup_test_command_spelling_output4 = ta_ficition_lookup component OUTPUT context_test2
lookuptest_command_spelling_output5  = ta_ficition_lookup component OUTPUT context_test1
lookup-test_command_spelling_output6  = ta_ficition_lookup component OUTPUT context_test2
LOOKUP_test_command_spelling_outputnew = ta_ficition_lookup component OUTPUTNEW context_test1
LOOKUPtest_command_spelling_outputnew2  = ta_ficition_lookup component OUTPUTNEW context_test2
LOOKUP-test_command_spelling_outputnew3 = ta_ficition_lookup component OUTPUTNEW context_test1
lookup_test_command_spelling_outputnew4 = ta_ficition_lookup component OUTPUTNEW context_test2
lookuptest_command_spelling_outputnew5  = ta_ficition_lookup component OUTPUTNEW context_test1
lookup-test_command_spelling_outputnew6  = ta_ficition_lookup component OUTPUTNEW context_test2
LOOKUP-test_as_input = ta_ficition_lookup test_name AS name OUTPUT context_test1
LOOKUP-test_as_output = ta_ficition_lookup component OUTPUT context_test AS context_test_alternative
LOOKUP-test_as_input_output = ta_ficition_lookup test_name AS name OUTPUT context_test AS context_test_alternative2
LOOKUP-test_as_input_output_multiple = ta_ficition_lookup test_name AS name OUTPUT context_test AS context_test_alternative3, status_test AS status2
LOOKUP-test_as_input_outputnew_multiple = ta_ficition_lookup test_name AS name OUTPUTNEW context_test AS context_test_alternative4 status_test AS status2
LOOKUP-test_AS_and_as_keyword = ta_ficition_lookup test_name as name OUTPUT context_test AS context_test_alternative5
LOOKUP-test_as_keyword = ta_ficition_lookup test_name as name OUTPUT context_test1 status_test as status2
LOOKUP-test_AS_keyword = ta_ficition_lookup test_name AS name OUTPUT context_test2 status_test as status2
LOOKUP-test_AS_and_as_keyword = ta_ficition_lookup test_name AS name OUTPUT status_test as status2
LOOKUP-test_string_outputfield = ta_ficition_lookup component OUTPUTNEW status.test
LOOKUP-test_multiple_input = ta_ficition_lookup component, aliasone OUTPUT context_test2
LOOKUP-test_multiple_output = ta_ficition_lookup component OUTPUT context_test1, status2
LOOKUP-test_multiple_input_output = ta_ficition_lookup component, aliasone OUTPUT context_test1, status2
LOOKUP-test_multiple_outputnew = ta_ficition_lookup component OUTPUTNEW context_test2, status2, status_test as status2
LOOKUP-test_multiple_input_outputnew = ta_ficition_lookup component, aliasone OUTPUT context_test2, status2
LOOKUP-test_no_output = ta_ficition_lookup component


[source::/opt/splunk/var/log/splunk/splunkd.log*]
EVAL-component = "test"

[source::...(/opt/splunk/var/log/splunk/)(metrics.log*|health.log*)]
EVAL-splunk_server = "server1"
